{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/reimao/Downloads/convite-modificado/convite/src/app/api/convidados/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { promises as fs } from 'fs';\nimport path from 'path';\n\nexport interface Convidado {\n  id: string;\n  nomeCompleto: string;\n  confirmado: boolean;\n  dataConfirmacao: string;\n}\n\nconst DATA_FILE = path.join(process.cwd(), 'data', 'convidados.json');\n\n// Função para garantir que o diretório data existe\nasync function ensureDataDirectory() {\n  const dataDir = path.dirname(DATA_FILE);\n  try {\n    await fs.access(dataDir);\n  } catch {\n    await fs.mkdir(dataDir, { recursive: true });\n  }\n}\n\n// Função para ler os dados do arquivo JSON\nasync function readConvidados(): Promise<Convidado[]> {\n  try {\n    await ensureDataDirectory();\n    const data = await fs.readFile(DATA_FILE, 'utf-8');\n    return JSON.parse(data);\n  } catch (error) {\n    // Se o arquivo não existir, retorna array vazio\n    return [];\n  }\n}\n\n// Função para salvar os dados no arquivo JSON\nasync function writeConvidados(convidados: Convidado[]): Promise<void> {\n  await ensureDataDirectory();\n  await fs.writeFile(DATA_FILE, JSON.stringify(convidados, null, 2));\n}\n\n// GET - Buscar todos os convidados\nexport async function GET() {\n  try {\n    const convidados = await readConvidados();\n    return NextResponse.json(convidados);\n  } catch (error) {\n    console.error('Erro ao buscar convidados:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n// POST - Adicionar novo convidado\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { nomeCompleto, confirmado } = body;\n\n    if (!nomeCompleto || typeof confirmado !== 'boolean') {\n      return NextResponse.json(\n        { error: 'Nome completo e confirmação são obrigatórios' },\n        { status: 400 }\n      );\n    }\n\n    const convidados = await readConvidados();\n    \n    const novoConvidado: Convidado = {\n      id: Date.now().toString(),\n      nomeCompleto,\n      confirmado,\n      dataConfirmacao: new Date().toISOString(),\n    };\n\n    convidados.push(novoConvidado);\n    await writeConvidados(convidados);\n\n    return NextResponse.json(novoConvidado, { status: 201 });\n  } catch (error) {\n    console.error('Erro ao adicionar convidado:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE - Limpar todos os convidados (útil para testes)\nexport async function DELETE() {\n  try {\n    await writeConvidados([]);\n    return NextResponse.json({ message: 'Todos os convidados foram removidos' });\n  } catch (error) {\n    console.error('Erro ao limpar convidados:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AASA,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAEnD,mDAAmD;AACnD,eAAe;IACb,MAAM,UAAU,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;IAC7B,IAAI;QACF,MAAM,6FAAA,CAAA,WAAE,CAAC,MAAM,CAAC;IAClB,EAAE,OAAM;QACN,MAAM,6FAAA,CAAA,WAAE,CAAC,KAAK,CAAC,SAAS;YAAE,WAAW;QAAK;IAC5C;AACF;AAEA,2CAA2C;AAC3C,eAAe;IACb,IAAI;QACF,MAAM;QACN,MAAM,OAAO,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC,WAAW;QAC1C,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,gDAAgD;QAChD,OAAO,EAAE;IACX;AACF;AAEA,8CAA8C;AAC9C,eAAe,gBAAgB,UAAuB;IACpD,MAAM;IACN,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,WAAW,KAAK,SAAS,CAAC,YAAY,MAAM;AACjE;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,aAAa,MAAM;QACzB,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG;QAErC,IAAI,CAAC,gBAAgB,OAAO,eAAe,WAAW;YACpD,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA+C,GACxD;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,aAAa,MAAM;QAEzB,MAAM,gBAA2B;YAC/B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB;YACA;YACA,iBAAiB,IAAI,OAAO,WAAW;QACzC;QAEA,WAAW,IAAI,CAAC;QAChB,MAAM,gBAAgB;QAEtB,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,eAAe;YAAE,QAAQ;QAAI;IACxD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,gBAAgB,EAAE;QACxB,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsC;IAC5E,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}